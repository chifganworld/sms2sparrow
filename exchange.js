// Generated by CoffeeScript 1.8.0
(function() {
  var app, encounters, express, records, server;
  express = require("express");
  var bodyParser = require('body-parser');
  var exchangeAPI =require ("./lib/api");
  var dao =require ("./lib/dao");
  var smsKeyWord=exchangeAPI.getSMSKeyWord();
	function errorHandler(err, req, res, next) {
	  if (res.headersSent) {
		return next(err);
	  }
	  res.status(500);
	  res.render('error', { error: err });
	}
  app = express();
  app.use(bodyParser.json());
  app.use(bodyParser.urlencoded());
  //app.use(express.static(entityAPI.resolvePathDirectory(__dirname,'public')));
  app.use(errorHandler);server = app.listen(process.env.PORT || 8084, function() {
    return console.log("SMS2Sparrow exchange is running on port:" + (server.address().port));
  });
	function sendSMS(from,text,to,id,res)
	{
		var escapedText="";
		var cleanedText="";
		//escapedText=toUTF8(text);
		if(exchangeAPI.getSupportSpecialCharset()==true)
		{
			escapedText=encodeURIComponent(text);
			cleanedText=escapedText.replace(/\%2B/g, '+');
		}
		else
		{
			cleanedText=text;
		}
		console.log("########: "+cleanedText+" ######");
		exchangeAPI.SendSMS(from,cleanedText,to,id,function(resAPI)
		{
			//console.log("Send report: "+resAPI);
			//res.json(resAPI);
			//console.log(resAPI[0].status);
			//return res.end();
			if(resAPI[0].response_code==200)
			{
				console.log("Messages sent");
				res.json('{"response":"Messages sent"}');
				//Log the sms in the db
				dao.saveSMS(id,from,to,function(resBD)
				{
					if(resBD==true)
					{
						console.log("Success: SMS logged in the DB");
					}
					else
					{
						console.log("Fail: SMS not logged in the DB");
					}
					return res.end();
				});
				
				
				
			}
		});
	}
	function sendAndNotify(from,text,to,id,res)
	{
		exchangeAPI.SendSMSAndNotifySuccess(from,text,to,id,function(resAPI)
		{
			console.log(resAPI[0]);
			res.json(resAPI[0]);
			res.end();
		});
		
	}
	function reportSentToRapidPro(res)
	{
		dao.getListSMS3(function(listSMS)
		{
			if(listSMS!=null)
			{
				var oSMS=listSMS;
				exchangeAPI.notifySendSucceded(oSMS.id,function(resRP)
				{
					//console.log(resRP[0]);
					if(resRP[0].response=="SMS Status Updated")
					{
						dao.editSMS(oSMS.id,1,function (resSB)
						{
							if(resSB==true)
							{
								console.log("Success "+oSMS.id+": SMS updated in the DB")
								//res.js('{"Success":"SMS updated in the DB"}');
							}
							else
							{
								console.log("Fail: SMS not updated in the DB");
								//res.send('{"Fail":"SMS not updated in the DB"}');
							}
							res.json('{"response":"message updated in rapidPro"}');
							return res.end();
						});
					}
					else
					{
						
					}
					
				});
			}
			else
			{
				console.log("No messages in pending");
				res.json('{"response":"No messages in pending"}');
				return res.end();
			}
			
		});
		
	}
	//the keyword is supposed to be at the beginning of the sms
	function removeKeyWordFormSMS(_text)
	{
		var rebuiltSMS="";
		var lowerCaseString=_text.toLowerCase();
		var resSplit=lowerCaseString.split(smsKeyWord);
		for(var i=0;i<resSplit.length;i++)
		{
			rebuiltSMS+=resSplit[i];
		}
		return rebuiltSMS;
		
	}
	function reportReceivedSMSToRapidpro(res)
	{
		//dao.getListReceivedSMS(function(listSMS)
		exchangeAPI.getListReceivedSMS(function(listSMS)
		{
			if(listSMS!=null)
			{
				var oSMS=listSMS;
				console.log(oSMS.dateSent);
				var rebuiltSMS=removeKeyWordFormSMS(oSMS.text);
				//console.log("####rebuilt sms :"+rebuiltSMS);
				var tempDateSent=new Date(""+oSMS.dateSent);
				var dateSent=tempDateSent.toISOString();
				exchangeAPI.notifyReceivedSMS(oSMS.from,rebuiltSMS,dateSent,function(resRP)
				{
					//console.log(resRP[0].response.trim());
					if(resRP[0].response.includes("SMS Accepted")==true)
					{
						dao.editReceivedSMS(oSMS.id_sparrow,function (resSB)
						{
							if(resSB==true)
							{
								console.log("Success "+oSMS.id_sparrow+": SMS updated in the DB")
								//res.js('{"Success":"SMS updated in the DB"}');
							}
							else
							{
								console.log("Fail: SMS not updated in the DB");
								//res.send('{"Fail":"SMS not updated in the DB"}');
							}
							res.json('{"response":"message updated in rapidPro"}');
							return res.end();
						});
					}
					else
					{
						console.log("Error :"+resRP[0].response);
					}
					
				});
			}
			else
			{
				console.log("No messages in pending");
				res.json('{"response":"No messages in pending"}');
				return res.end();
			}
			
		});
		
	}
	function reportSentToRapidPro2(res)
	{
		dao.getListSMS2();
		
	}
	
	app.param ("from", function (req,res,next,from)
	{
		req.from=from;
		next();
	});
	app.param ("text", function (req,res,next,text)
	{
		req.text=text;
		next();
	});
	app.param ("to", function (req,res,next,to)
	{
		req.to=to;
		next();
	});
	app.param ("id", function (req,res,next,id)
	{
		req.id=id;
		next();
	});
	app.get ("/send/from=:from&text=:text&to=:to&id=:id", function (req,res,next)
	{
		/*
		console.log("From:"+req.from);
		console.log("Text:"+req.text);
		console.log("To:"+req.to);
		console.log("To:"+req.id);
		* */
		//var encodedText=encodeURIComponent();
		
		sendSMS(req.from,req.text,req.to,req.id,res);
		
	});
	app.get ("/reportsent", function (req,res,next)
	{
		
		//reportSentToRapidPro(res);
		reportSentToRapidPro(res);
		
	});
	app.get ("/getsms", function (req,res,next)
	{
		var currentDate=new Date().toJSON();
		//reportSentToRapidPro(res);
		//reportSentToRapidPro(res);
		//console.log(""+currentDate+"| "+"| Campain logged!!!!");
		//console.log("----------------- >>>");
		//console.log(req);
		//return res.end();
		
		var from="";
		var to="";
		var keyword="";
		var text="";
		from=req.query.from;
		to=req.query.to;
		keyword=req.query.keyword;
		text=req.query.text;
		var stringParams=""+from+"| "+to+"| "+keyword+"| "+text;
		console.log(""+currentDate+"| "+stringParams+"| Campain logged!!!!");
		console.log("----------------- >>>");
		
		dao.saveReceivedSMS(from,text,to,function(resBD)
		{
			if(resBD==true)
			{
				console.log("Success: SMS logged in the DB");
			}
			else
			{
				console.log("Fail: SMS not logged in the DB");
			}
			return res.end();
		});
		//console.log(req);
		//res.json('{"response":"callback url called"}');
		//return res.end();
		
		
		
	});
	/*
	app.get ("/testincrement", function (req,res,next)
	{
		dao.saveReceivedSMS('+243810890810','sms text','3660',function(resdB)
		{
			console.log(resdB)
		});
		return res.end();
	});*/
	
	app.get ("/getReceivedSMS", function (req,res,next)
	{
		dao.getListReceivedSMS(function(listSMS)
		{
			if(listSMS!=null)
			{
				var oSMS=listSMS;
				res.json(oSMS)
			}
			return res.end();
		});
				
		
	});
	
	app.get ("/pushsms2rp", function (req,res,next)
	{
		
		//reportSentToRapidPro(res);
		reportReceivedSMSToRapidpro(res);
		
	});
	

}).call(this);
